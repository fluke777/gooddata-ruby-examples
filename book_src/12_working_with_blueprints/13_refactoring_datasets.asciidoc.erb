=== Refactoring datasets
by Tomas Svarovsky

==== Problem
You created a quick protoype but you found out that it needs some touch ups.

==== Notes
This is work in progress.

==== Solution

Use SDK refactoring features.

Let's have a look at two hypothetical but very common scenarios that you probably encountered in during career.

===== "One Dataset problem"

Lets' say you have model like this

<%= render_ruby 'src/12_working_with_blueprints/refactoring_part1.rb' %>

There is one problem. We should definitely extract the attribute from 'dataset.sales' dataset somewhere else. Also the anchor for this dataset has a label. Unless we do not have specific reason for it we should extract it somewhere else.

We can try to ask SDK to help us

<%= render_ruby 'src/12_working_with_blueprints/refactoring_part2.rb' %>

You can see that there is stage attribute right there. And it prepared an anchor for us. The naming definitely needs touch ups (User should be able to specify the ids somehow) but the structure is there. Now let's have a look what happened to sales dataset

<%= render_ruby 'src/12_working_with_blueprints/refactoring_part3.rb' %>

You can see that the attribute is gone with labels. Only facts remained. New reference was added so the reports should still be working. This might seems just like a minor thing but once you start creating more complex models with multiple stars you find this techique a necessity so why not automate it. 

===== Multiple facts in one dataset

Another problem we will look at is splitting fact tables because of facts. Conside this model

<%= render_ruby 'src/12_working_with_blueprints/refactoring_part4.rb' %>

What you want to do is have a look at how many shipments were ordered and shipped on particular day. But if you keep the facts in one dataset you will have all kinds of trouble with nil values. Much better is to split the fact tables in two. Again we can try doing that with SDK

Note: it seems it currently does not work with date references. We need to update that so I ommitted it in the example so it works

<%= render_ruby 'src/12_working_with_blueprints/refactoring_part5.rb' %>

These are 2 basic ways how to refactor a blueprint in an assisted and automated fashion.